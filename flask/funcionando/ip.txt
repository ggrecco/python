0:00:08.590 ---> 0:00:13.739
Hey there, so thanks for watching my Youtube video [and] thanks for [coming] [to] the bonus video

0:00:14.019 ---> 0:00:16.319
Which is a video on how [to] integrate?

0:00:16.630 ---> 0:00:23.250
SQLAllchemy into a ceelery app so the reason why you will want to integrate SQLAllchemy in a ceelery

0:00:23.890 ---> 0:00:29.609
fllask app is because dattabase transactions can take a long time [depending] on what you're doing

0:00:30.039 ---> 0:00:32.039
so if you are trying to

0:00:32.649 ---> 0:00:35.759
query a lot of data for something say your report and

0:00:35.950 ---> 0:00:37.950
Then you take that Data and generate a report

0:00:37.950 ---> 0:00:43.619
and then maybe email their report to someone this doesn't need to be something that people just sit at the

0:00:43.750 ---> 0:00:47.099
Browwser and wait for it you can initiate a asynchronous

0:00:47.100 ---> 0:00:50.309
tassk to go generate that report and then when it's done

0:00:50.500 ---> 0:00:54.930
it can get sent to the user while the user can continue using your app in other ways and

0:00:55.570 ---> 0:00:57.840
another example would be if say if a user is

0:00:58.300 ---> 0:01:04.589
Uploading a lot of data like they're importing something you don't necessarily need to sit there and make them wait for

0:01:05.320 ---> 0:01:09.750
The uploads to complete because there's just so much data. So you would

0:01:10.450 ---> 0:01:14.430
call it a synchronous process to take this data insert it into the dattabase while they

0:01:14.590 ---> 0:01:20.880
continue doing whatever they want to do and then when the data is done you can alert them if you choose [to] do, so

0:01:21.159 ---> 0:01:27.478
So in this video. I'll have another contrived example, but it's going to use SQLAllchemy. So it will be a little more clear

0:01:28.390 ---> 0:01:30.390
What benefits you get from doing this?

0:01:31.000 ---> 0:01:36.449
So the first thing you need to do is import a SQLAllchemy so from fllask

0:01:37.270 ---> 0:01:39.189
SQLAllchemy

0:01:39.189 ---> 0:01:40.750
import

0:01:40.750 ---> 0:01:42.839
Sql, and then alchemy

0:01:43.990 ---> 0:01:47.579
Alright, and then I need to add a little bit of configuration

0:01:48.280 ---> 0:01:52.199
So in addition to the ceelery configuration, I will add

0:01:54.250 ---> 0:01:56.250
SQLAllchemy

0:01:56.290 ---> 0:01:57.969
dattabase

0:01:57.969 ---> 0:02:05.669
Uri, and of course this is the location and username and password of my dattabase which I'll just add here of course if you were

0:02:05.670 ---> 0:02:09.300
Doing this in a real app. You wouldn't want to have the username and password

0:02:09.300 ---> 0:02:11.699
It's just out in the open like this in your code

0:02:11.700 ---> 0:02:17.339
It would be from a configuration file since this is just an example, and I'm not focusing on that in this video

0:02:17.340 ---> 0:02:20.340
I'm just leaving them right there and by the way if you try to go to those

0:02:21.100 ---> 0:02:26.519
Urls or the Uri for my dattabase you won't be able to because by the time this video comes out

0:02:26.520 ---> 0:02:30.359
I'll have deleted the dattabase in the users for this particular example

0:02:31.450 ---> 0:02:36.750
so now that I have the configuration [set] [up] what I'm going to do is create a very simple model and

0:02:37.060 ---> 0:02:39.060
To do that first I have to instantiate

0:02:39.640 ---> 0:02:42.480
SQLAllchemy so SQLAllchemy and pass in the app

0:02:42.480 ---> 0:02:48.480
Just like I use make ceelery above and then the model that I'm going to create will be very simple

0:02:48.480 ---> 0:02:49.830
I'll call this results

0:02:49.830 ---> 0:02:53.070
I already have a table in my dattabase [set] [up] for results

0:02:53.070 ---> 0:02:55.079
So I don't have to create all but if you do

0:02:55.270 ---> 0:02:59.760
Have to create all then just run that first before you run the code and then

0:03:00.520 ---> 0:03:06.659
You'll be able to use SQLAllchemy to actually insert into it and of course create all is something that comes with SQLAllchemy

0:03:06.660 ---> 0:03:13.260
So I'll create two columns. I'll create an id column which is going to be the primary key so DB integer and

0:03:13.840 ---> 0:03:15.840
Then primary key is true

0:03:16.870 ---> 0:03:20.310
key true, and then I'll just have a data Column and

0:03:22.480 ---> 0:03:29.339
With this data Column. [I'll] make it a string and let's just say 50 characters long, so nothing special about the data Column

0:03:30.820 ---> 0:03:36.540
so now what I want to do is I want to actually create some kind of function to insert data into the dattabase, so

0:03:36.610 ---> 0:03:38.250
First I'm going to create a regular function

0:03:38.250 ---> 0:03:42.779
And we'll see how long it takes to run and then now add ceelery to it

0:03:42.780 ---> 0:03:47.399
And we'll see how long that takes or at least the perception from the user perspective

0:03:47.800 ---> 0:03:52.169
so I'll call this function insert because I'm going to insert a bunch of rowws and

0:03:52.930 ---> 0:03:56.280
What I'll do is. I'll insert some random data. So I'll import random

0:03:56.920 ---> 0:03:58.920
so

0:03:59.950 ---> 0:04:07.890
What's the name of the thing I want I want from random import choice. That's what it is [and] choice. Just picks a

0:04:08.560 ---> 0:04:10.679
character out of a string randomly or

0:04:11.140 ---> 0:04:16.739
An object out of a list I'm going to be picking a character out of a string which I'll show you in just a moment

0:04:16.739 ---> 0:04:18.640
here, so

0:04:18.640 ---> 0:04:20.500
in insert

0:04:20.500 ---> 0:04:22.500
I'm going to

0:04:22.750 ---> 0:04:24.620
loop

0:04:24.620 ---> 0:04:30.340
so for I and let's say x range 500 so I want to insert 500 rowws and

0:04:31.940 ---> 0:04:33.940
I'll call this data and

0:04:34.220 ---> 0:04:37.390
Then what I'm going to do is randomly generate a string

0:04:38.300 ---> 0:04:39.920
using choice

0:04:39.920 ---> 0:04:41.920
containing the first

0:04:42.290 ---> 0:04:44.950
five letters of the alphabet so abcde

0:04:47.030 ---> 0:04:53.589
For I and range 10 and all this means is I want to generate a 10 character string

0:04:54.530 ---> 0:04:58.059
composed of random characters in the list of abcde

0:04:59.000 ---> 0:05:01.000
So once I have this string

0:05:01.550 ---> 0:05:03.550
I'm going [to]

0:05:04.220 ---> 0:05:11.710
Instantiate a dattabase object so I'll call this result equals results and the data is going to be data

0:05:12.410 ---> 0:05:14.410
[ok] and

0:05:14.450 ---> 0:05:21.009
then I need to add this data to the session so [DB] the session dyad, and I'll add result and

0:05:21.560 ---> 0:05:24.520
Finally after the loop is done. I will commit

0:05:26.810 ---> 0:05:28.790
and

0:05:28.790 ---> 0:05:32.920
Nothing will get returned. Well. I'll return a done. How about that

0:05:33.920 ---> 0:05:35.060
so

0:05:35.060 ---> 0:05:37.060
I'll create a new route

0:05:37.400 ---> 0:05:40.150
Up here let's say app routes

0:05:42.200 ---> 0:05:44.200
insert Data

0:05:45.170 ---> 0:05:47.170
[I'll] define the function

0:05:48.200 ---> 0:05:50.200
and

0:05:50.660 ---> 0:05:54.010
Basically what I'm going to do is return insert

0:05:55.880 ---> 0:05:57.969
So this is going to call insert

0:05:58.370 ---> 0:06:05.320
Which is going to go in here loop over 500 times and insert 500 rolls into the table, and then when it's all done

0:06:05.320 ---> 0:06:08.830
it's going to return this string done to me, [so]

0:06:09.590 ---> 0:06:13.330
[let] me start up the server, but before I do I see I have a syntax error here

0:06:13.490 ---> 0:06:18.820
so I'll just add a parenthesis and then I will start up the server, so

0:06:19.340 ---> 0:06:21.340
ppython ceelery example

0:06:29.370 ---> 0:06:32.209
And my computer is really slow

0:06:33.900 ---> 0:06:38.510
It was taking a while to connect to my dattabase which [it's] kind of expected

0:06:38.510 ---> 0:06:44.480
It's not the fastest host that I have all right, so I'm connected to the dattabase because I'm not I don't have any errors

0:06:44.820 ---> 0:06:46.820
So I'll go to this insert data

0:06:48.420 ---> 0:06:54.499
So insert data, and I'll just let it run so it's running. It's running. It's running

0:06:54.500 ---> 0:06:58.940
[I] see if I'm I got the requests here, and now it's going to show up when the response is ready

0:06:59.190 ---> 0:07:04.160
So it's it's trying to insert the data. It's slowly inserting the data

0:07:04.160 ---> 0:07:07.999
It's taking this time five hundred rowws is quite a bit to insert

0:07:08.760 ---> 0:07:15.319
especially with my host being so slow so hopefully this doesn't take too [long] it should take maybe 20 30 seconds [to]

0:07:15.840 ---> 0:07:18.440
insert all the data so it's

0:07:19.140 ---> 0:07:21.140
Probably chugging along right now

0:07:21.840 ---> 0:07:24.139
Slowly okay, so now it says it's done

0:07:24.140 ---> 0:07:31.190
And now let me go to my dattabase so before it had zero rowws, so I'll just refresh this and now I see I have

0:07:33.210 ---> 0:07:40.940
Quite a few rowws 500 total and you [can] see how my data is just random strings with characters from a to e?

0:07:41.910 ---> 0:07:44.239
Okay, so that's not what we want

0:07:44.240 ---> 0:07:48.500
We don't want the user to sit there and have to wait for all this data to be inserted into the dattabase

0:07:48.900 ---> 0:07:50.900
So now this is where ceelery comes in

0:07:52.080 ---> 0:07:55.340
So now what I want to do is I want to make this a ceelery tassk

0:07:55.710 ---> 0:08:01.040
So I'll just add the decorator above so ceelery tassk, and I'll give an explicit name

0:08:01.040 ---> 0:08:04.609
Just like I have above so let's say ceelery example

0:08:06.660 ---> 0:08:09.980
dot insert so I'll save that and

0:08:10.920 ---> 0:08:16.609
I will start up a ceelery server, so let me open up a second bash and then

0:08:18.060 ---> 0:08:20.060
I'll move to the directory and

0:08:22.680 ---> 0:08:29.239
I'll get ceelery started, but I believe I have [to] first start up the rabbiit in [queue] server so sudo service

0:08:29.880 ---> 0:08:31.880
rabbiit and [Q]

0:08:33.180 ---> 0:08:35.180
serrver starrt

0:08:36.070 ---> 0:08:38.520
And it's starting the message broker

0:08:39.880 ---> 0:08:47.249
So just wait a moment for that, and then once this is done. I'll start up ceelery using this same file, so ceelery

0:08:47.920 ---> 0:08:51.119
- a and the name of this file is ceelery

0:08:51.910 ---> 0:08:55.290
Example, but I want to be explicit saw pat's and ceelery

0:08:55.290 ---> 0:08:59.819
So it doesn't pick up any of the fllask stuff and then worrker and then llog

0:09:01.300 ---> 0:09:03.450
level info and

0:09:05.290 ---> 0:09:08.639
That's it. So it should start ceelery and

0:09:10.180 ---> 0:09:14.609
We see it has my two tassks now. It has insert in addition to reverse

0:09:15.700 ---> 0:09:19.319
So now what I need to do is simply change my insert here

0:09:20.140 ---> 0:09:24.840
From a regular function call to [a] ceelery tassk

0:09:25.480 ---> 0:09:29.159
call so I have to do insert delay and

0:09:30.100 ---> 0:09:34.529
There are no arguments to pass so I'll just do that, and then I'll simply say I

0:09:35.200 ---> 0:09:40.200
sent an asyNC requests to insert data into the

0:09:41.740 ---> 0:09:43.600
into the dattabase

0:09:43.600 ---> 0:09:46.889
All right, so I'll save that and make sure my flat server restarts

0:09:46.890 ---> 0:09:50.429
And it did so now when I go to this route insert data

0:09:50.430 ---> 0:09:55.920
It should return much faster than before it took about 30 seconds to do it the first time

0:09:56.380 ---> 0:10:02.820
Hopefully, it doesn't take nearly as long this time, and we see right [here]. [I] have 500 rowws. So after this gets done

0:10:02.820 ---> 0:10:04.820
I should have a thousand rowws

0:10:05.080 ---> 0:10:08.429
So I'll go to insert Data. I'll run it again and look

0:10:08.430 ---> 0:10:13.530
How quickly that returned I sent an asynC request to insert data into the dattabase. It was nearly instant

0:10:13.570 ---> 0:10:15.570
So now let's look at the ceelery

0:10:17.170 ---> 0:10:22.319
Process here, and it says it received a tassk a ceelery example dot insert and now

0:10:23.200 ---> 0:10:27.330
[just] working. It's not going to give us a progress update. It's just going to

0:10:28.150 ---> 0:10:32.369
Silently work on inserting all these rowws into the dattabase and then once it's done

0:10:32.710 ---> 0:10:38.999
It's going to tell me that is done, and it should tell me how long it took so

0:10:39.640 ---> 0:10:41.380
There it says

0:10:41.380 ---> 0:10:44.249
Insert is done, and it took [30] [1.8] seconds

0:10:44.410 ---> 0:10:49.259
So that's 31 seconds that the user didn't have to sit there and wait for the data be inserted

0:10:49.380 ---> 0:10:51.380
And now let's go back to the dattabase

0:10:51.550 ---> 0:10:53.609
and I'll refresh this and

0:10:54.430 ---> 0:10:57.989
We see now instead of 500 rowws. We have 1,000 rowws

0:10:57.990 ---> 0:11:02.039
[I] only shows 30 rowws at a time, but of course up here it tells you the total

0:11:02.770 ---> 0:11:07.110
so it's really that simple to integrate SQLAllchemy into

0:11:08.020 ---> 0:11:10.199
your fllask and ceelery combination app

0:00:08.590 --> 0:00:13.739
Olá, obrigado por assistir meu vídeo do Youtube e obrigado por [vir] [ao] vídeo bônus

0:00:14.019 --> 0:00:16.319
Qual é um vídeo sobre como [integrar]?

0:00:16.630 --> 0:00:23.250
SQLAllchemy em um aplicativo de ceelery assim a razão pela qual você vai querer integrar SQLAllchemy em uma ceelery

0:00:23.890 --> 0:00:29.609
O aplicativo fllask é porque as transações do dattabase podem levar muito tempo [dependendo] do que você está fazendo

0:00:30.039 --> 0:00:32.039
então se você está tentando

0:00:32.649 --> 0:00:35.759
consultar um monte de dados para algo dizer seu relatório e

0:00:35.950 --> 0:00:37.950
Então você pega esses dados e gera um relatório

0:00:37.950 --> 0:00:43.619
e, em seguida, talvez enviem o relatório por e-mail para alguém que não precisa ser algo que as pessoas simplesmente sentam no

0:00:43.750 --> 0:00:47.099
Browwser e espere por isso você pode iniciar um assíncrono

0:00:47.100 --> 0:00:50.309
tassk para ir gerar esse relatório e, em seguida, quando é feito

0:00:50.500 --> 0:00:54.930
ele pode ser enviado para o usuário enquanto o usuário pode continuar usando seu aplicativo de outras maneiras e

0:00:55.570 --> 0:00:57.840
Outro exemplo seria se dizer se um usuário é

0:00:58.300 --> 0:01:04.589
Fazendo o upload de muitos dados, como se eles estivessem importando algo que você não precisa necessariamente sentar lá e fazer com que eles esperem por

0:01:05.320 --> 0:01:09.750
Os uploads são concluídos porque há muitos dados. Então você faria

0:01:10.450 --> 0:01:14.430
chamam de um processo síncrono para levar esses dados inseri-lo no dattabase enquanto eles

0:01:14,590 --> 0:01:20,880
continue fazendo o que quiser e, quando os dados estiverem prontos, você poderá alertá-los se escolher fazer, então

0:01:21.159 --> 0:01:27.478
Então neste vídeo. Eu vou ter outro exemplo inventado, mas vai usar o SQLAllchemy. Então vai ficar um pouco mais claro

0:01:28,390 --> 0:01:30,390
Quais os benefícios que você obtém ao fazer isso?

0:01:31.000 --> 0:01:36.449
Então, a primeira coisa que você precisa fazer é importar um SQLAllchemy para que o fllask

0:01:37,270 --> 0:01:39,189
SQLAllchemy

0:01:39.189 --> 0:01:40.750
importar

0:01:40.750 --> 0:01:42.839
Sql e, em seguida, alquimia

0:01:43.990 --> 0:01:47.579
Tudo bem, e então eu preciso adicionar um pouco de configuração

0:01:48.280 --> 0:01:52.199
Então, além da configuração de ceelery, vou adicionar

0:01:54.250 --> 0:01:56.250
SQLAllchemy

0:01:56.290 --> 0:01:57.969
dattabase

0:01:57.969 --> 0:02:05.669
Uri, e é claro que este é o local e nome de usuário e senha do meu dattabase que eu vou adicionar aqui, claro, se você fosse

0:02:05.670 --> 0:02:09.300
Fazendo isso em um aplicativo real. Você não gostaria de ter o nome de usuário e senha

0:02:09.300 --> 0:02:11.699
É apenas a céu aberto assim no seu código

0:02:11.700 --> 0:02:17.339
Seria de um arquivo de configuração, já que este é apenas um exemplo, e não estou me concentrando nisso neste vídeo

0:02:17.340 --> 0:02:20.340
Eu estou apenas deixando-os ali e, a propósito, se você tentar ir àqueles

0:02:21,100 --> 0:02:26,519
Urls ou o Uri para o meu dattabase você não será capaz, porque no momento em que este vídeo sair

0:02:26.520 --> 0:02:30.359
Eu deletei o dattabase nos usuários para esse exemplo em particular

0:02:31.450 --> 0:02:36.750
então agora que eu tenho a configuração [set] [up] o que eu vou fazer é criar um modelo bem simples e

0:02:37.060 --> 0:02:39.060
Para fazer isso primeiro eu tenho que instanciar

0:02:39,640 --> 0:02:42,480
SQLAllchemy so SQLAllchemy e passar no aplicativo

0:02:42,480 --> 0:02:48,480
Assim como eu uso fazer ceelery acima e, em seguida, o modelo que vou criar será muito simples

0:02:48,480 --> 0:02:49,830
Eu vou chamar isso de resultados

0:02:49,830 --> 0:02:53,070
Eu já tenho uma tabela no meu dattabase [set] [up] para resultados

0:02:53,070 --> 0:02:55,079
Então eu não tenho que criar todos, mas se você fizer

0:02:55,270 --> 0:02:59,760
Tem que criar tudo, em seguida, basta executá-lo primeiro antes de executar o código e, em seguida,

0:03:00.520 --> 0:03:06.659
Você será capaz de usar SQLAllchemy para realmente inserir nele e, claro, criar tudo é algo que vem com SQLAllchemy

0:03:06.660 --> 0:03:13.260
Então eu vou criar duas colunas. Vou criar uma coluna id que será a chave primária, de forma que o número inteiro e

0:03:13,840 --> 0:03:15,840
Então a chave primária é verdadeira

0:03:16.870 --> 0:03:20.310
chave verdadeira, e então eu vou ter apenas uma coluna de dados e

0:03:22.480 --> 0:03:29.339
Com esta coluna de dados. [Vou] fazer uma string e digamos 50 caracteres, então nada de especial sobre a coluna de dados

0:03:30.820 --> 0:03:36.540
então agora o que eu quero fazer é eu realmente criar algum tipo de função para inserir dados no dattabase, então

0:03:36.610 --> 0:03:38.250
Primeiro eu vou criar uma função regular

0:03:38.250 --> 0:03:42.779
E vamos ver quanto tempo demora para correr e, em seguida, adicionar ceelery a ele

0:03:42.780 --> 0:03:47.399
E veremos quanto tempo isso leva ou pelo menos a percepção da perspectiva do usuário

0:03:47.800 --> 0:03:52.169
então eu vou chamar esta inserção de função porque eu vou inserir um monte de rowws e

0:03:52.930 --> 0:03:56.280
O que eu vou fazer é. Vou inserir alguns dados aleatórios. Então eu vou importar aleatoriamente

0:03:56.920 --> 0:03:58.920
assim

0:03:59.950 --> 0:04:07.890
Qual é o nome da coisa que eu quero da escolha aleatória de importação. Isso é o que é [e] escolha. Apenas escolhe um

0:04:08.560 --> 0:04:10.679
personagem fora de uma string aleatoriamente ou

0:04:11.140 --> 0:04:16.739
Um objeto fora de uma lista eu vou estar pegando um personagem de uma string que eu vou te mostrar em apenas um momento

0:04:16.739 --> 0:04:18.640
aqui, então

0:04:18.640 --> 0:04:20.500
em inserir

0:04:20.500 --> 0:04:22.500
eu vou

0:04:22.750 --> 0:04:24.620
laço

0:04:24.620 --> 0:04:30.340
por isso, para eu e digamos x intervalo 500, então eu quero inserir 500 rowws e

0:04:31.940 --> 0:04:33.940
Vou chamar esses dados e

0:04:34.220 --> 0:04:37.390
Então o que eu vou fazer é gerar aleatoriamente uma string

0:04:38.300 --> 0:04:39.920
usando escolha

0:04:39.920 --> 0:04:41.920
contendo o primeiro

0:04:42.290 --> 0:04:44.950
cinco letras do alfabeto tão abcde

0:04:47.030 --> 0:04:53.589
Para eu e intervalo 10 e tudo isso significa que eu quero gerar uma seqüência de 10 caracteres

0:04:54,530 --> 0:04:58,059
composto de caracteres aleatórios na lista de abcde

0:04:59.000 --> 0:05:01.000
Então, quando eu tiver essa string

0:05:01.550 --> 0:05:03.550
Eu vou]

0:05:04.220 --> 0:05:11.710
Instanciar um objeto dattabase, então eu chamarei este resultado de resultados e os dados serão dados

0:05:12.410 --> 0:05:14.410
[OK e

0:05:14.450 --> 0:05:21.009
então eu preciso adicionar esses dados à sessão para [DB] a díade de sessão, e eu adicionarei resultado e

0:05:21.560 --> 0:05:24.520
Finalmente, depois que o loop é feito. Eu vou cometer

0:05:26,810 --> 0:05:28,790
e

0:05:28.790 --> 0:05:32.920
Nada será devolvido. Bem. Vou devolver um feito. Que tal isso

0:05:33.920 --> 0:05:35.060
assim

0:05:35.060 --> 0:05:37.060
Vou criar uma nova rota

0:05:37.400 --> 0:05:40.150
Até aqui vamos dizer rotas de aplicativos

0:05:42.200 --> 0:05:44.200
inserir dados

0:05:45,170 --> 0:05:47,170
[Eu] vou definir a função

0:05:48.200 --> 0:05:50.200
e

0:05:50,660 --> 0:05:54,010
Basicamente o que vou fazer é retornar insert

0:05:55,880 --> 0:05:57,969
Então, isso vai chamar de inserir

0:05:58.370 --> 0:06:05.320
Que vai entrar aqui loop mais de 500 vezes e inserir 500 rolos na mesa, e depois quando tudo estiver pronto

0:06:05.320 --> 0:06:08.830
vai devolver essa string para mim, [so]

0:06:09.590 --> 0:06:13.330
[deixe] eu iniciar o servidor, mas antes disso eu vejo que tenho um erro de sintaxe aqui

0:06:13,490 --> 0:06:18,820
então vou apenas adicionar um parêntese e então eu vou iniciar o servidor, então

0:06:19.340 --> 0:06:21.340
exemplo de ceelery ppython

0:06:29,370 --> 0:06:32,209
E meu computador é muito lento

0:06:33.900 --> 0:06:38.510
Estava demorando um pouco para me conectar ao meu dattabase que é meio que esperado

0:06:38.510 --> 0:06:44.480
Não é o host mais rápido que eu tenho, então eu estou conectado ao dattabase porque eu não sou eu não tenho nenhum erro

0:06:44,820 --> 0:06:46,820
Então eu vou para esses dados de inserção

0:06:48,420 --> 0:06:54,499
Então, insira dados, e vou deixar que ele seja executado para que esteja em execução. Está correndo. Está correndo

0:06:54.500 --> 0:06:58.940
[Eu] ver se eu sou eu tenho os pedidos aqui, e agora ele vai aparecer quando a resposta estiver pronta

0:06:59.190 --> 0:07:04.160
Então, é tentar inserir os dados. Está lentamente inserindo os dados

0:07:04.160 --> 0:07:07.999
Está levando esse tempo quinhentas rowws é um pouco para inserir

0:07:08.760 --> 0:07:15.319
especialmente com o meu anfitrião sendo tão lento, então espero que isso não demore muito [muito] isso deve levar talvez 20 30 segundos [para]

0:07:15,840 --> 0:07:18,440
inserir todos os dados, por isso é

0:07:19.140 --> 0:07:21.140
Provavelmente chugging agora

0:07:21,840 --> 0:07:24,139
Lentamente bem, então agora diz que está feito

0:07:24,140 --> 0:07:31,190
E agora deixe-me ir para o meu dattabase então antes que ele tivesse zero roww, então eu vou apenas atualizar isso e agora eu vejo que tenho

0:07:33,210 --> 0:07:40,940
Bastante alguns roww 500 total e você [pode] ver como meus dados são apenas seqüências aleatórias com caracteres de um para e?

0:07:41.910 --> 0:07:44.239
Ok, então não é isso que queremos

0:07:44.240 --> 0:07:48.500
Não queremos que o usuário fique sentado e tenha que esperar que todos esses dados sejam inseridos no dattabase

0:07:48.900 --> 0:07:50.900
Então agora é aí que vem a ceelery

0:07:52,080 --> 0:07:55,340
Então agora o que eu quero fazer é que eu quero fazer isso um tassk ceelery

0:07:55,710 --> 0:08:01,040
Então eu vou apenas adicionar o decorador acima, então eu vou dar um nome explícito

0:08:01.040 --> 0:08:04.609
Assim como eu tenho acima, então vamos dizer exemplo de ceelery

0:08:06,660 --> 0:08:09,980
inserção de ponto, então eu vou guardar isso e

0:08:10.920 --> 0:08:16.609
Vou começar um servidor de ceelery, então deixe-me abrir uma segunda festa e depois

0:08:18.060 --> 0:08:20.060
Eu vou passar para o diretório e

0:08:22,680 --> 0:08:29,239
Eu vou começar ceelery começou, mas eu acredito que eu [para] primeiro iniciar o rabbiit no servidor [fila] para o serviço sudo

0:08:29,880 --> 0:08:31,880
rabbiit e [q]

0:08:33,180 --> 0:08:35,180
serrver starrt

0:08:36.070 --> 0:08:38.520
E está começando o corretor de mensagens

0:08:39,880 --> 0:08:47,249
Então espere um momento para isso e, depois disso, pronto. Vou começar a usar a ceelery nesse mesmo arquivo, então ceelery

0:08:47.920 --> 0:08:51.119
- ae o nome deste arquivo é ceelery

0:08:51,910 --> 0:08:55,290
Exemplo, mas eu quero ser explícito via pat e ceelery

0:08:55,290 --> 0:08:59,819
Então ele não pega nenhuma das coisas da fllask e então worrker e depois llog

0:09:01.300 --> 0:09:03.450
informações de nível e

0:09:05.290 --> 0:09:08.639
É isso aí. Então deve começar a ceelery e

0:09:10,180 --> 0:09:14,609
Nós vemos que tem minhas duas tiras agora. Tem inserção além de reverter

0:09:15.700 --> 0:09:19.319
Então agora o que eu preciso fazer é simplesmente mudar minha inserção aqui

0:09:20,140 --> 0:09:24,840
De uma chamada de função regular para [a] tassk ceelery

0:09:25,480 --> 0:09:29,159
chamar então eu tenho que fazer inserir atraso e

0:09:30,100 --> 0:09:34,529
Não há argumentos para passar, então eu vou fazer isso, e então eu vou simplesmente dizer que

0:09:35.200 --> 0:09:40.200
enviou um pedido asyNC para inserir dados no

0:09:41.740 --> 0:09:43.600
no dattabase

0:09:43.600 --> 0:09:46.889
Tudo bem, então vou salvar isso e garantir que meu servidor flat seja reiniciado

0:09:46,890 --> 0:09:50,429
E isso aconteceu agora quando eu vou para esta rota inserir dados

0:09:50,430 --> 0:09:55,920
Ele deve retornar muito mais rápido do que antes. Demorou cerca de 30 segundos para fazer isso da primeira vez

0:09:56,380 --> 0:10:02,820
Espero que não demore tanto tempo desta vez, e nós vemos bem aqui. [Eu] tenho 500 rowws. Então depois disso ser feito

0:10:02,820 --> 0:10:04,820
Eu deveria ter mil rowws

0:10:05.080 --> 0:10:08.429
Então eu vou inserir dados. Eu vou correr de novo e olhar

0:10:08,430 --> 0:10:13,530
Com que rapidez que retornei, enviei uma solicitação assíncrona para inserir dados na dattabase. Foi quase instantâneo

0:10:13,570 --> 0:10:15,570
Então, agora vamos olhar para a ceelery

0:10:17.170 --> 0:10:22.319
Processo aqui, e ele diz que recebeu um tassk uma inserção de ponto de exemplo de ceelery e agora

0:10:23.200 --> 0:10:27.330
[apenas trabalhando. Não nos dará uma atualização de progresso. Só vai

0:10:28,150 --> 0:10:32,369
Silenciosamente, trabalhe na inserção de todos esses roww no dattabase e, em seguida, uma vez feito

0:10:32,710 --> 0:10:38,999
Vai me dizer que está feito, e deve me dizer quanto tempo demorou tanto

0:10:39,640 --> 0:10:41,380
Ali diz

0:10:41.380 --> 0:10:44.249
A inserção está concluída e demorou [30] [1,8] segundos

0:10:44.410 --> 0:10:49.259
Então, são 31 segundos em que o usuário não precisou ficar sentado e esperar que os dados fossem inseridos

0:10:49,380 --> 0:10:51,380
E agora vamos voltar ao dattabase

0:10:51.550 - & gt; 0:10:53.609
e eu vou atualizar isso e

0:10:54,430 --> 0:10:57,989
Nós vemos agora em vez de 500 rowws. Nós temos 1.000 rowws

0:10:57.990 --> 0:11:02.039
[Eu] só mostra 30 rowws de cada vez, mas claro, aqui em cima, diz-lhe o total

0:11:02.770 --> 0:11:07.110
por isso é tão simples integrar SQLAllchemy em

0:11:08.020 --> 0:11:10.199
seu aplicativo de combinação fllask e ceelery

0:11:10.750 --> 0:11:12.480
Por isso, torna realmente poderoso

0:11:12.480 --> 0:11:19.769
Apenas dependendo do que você quer fazer, mas uma transação dattabase é algo que é realmente útil para ser feito em um tassk separado

0:11:20.440 --> 0:11:24.869
Outro exemplo será o envio de e-mails que normalmente enviam e-mails do aplicativo é muito lento

0:11:24.970 - & gt; 0:11:30.449
Então, você quer colocar isso no lixo e em qualquer outra coisa que leve muito tempo para você não querer que o usuário se sente

0:11:30,450 --> 0:11:34,560
Lá e espere, e eles não precisam de resultados imediatos. Você sempre pode dar a eles resultados mais tarde

0:11:35.140 --> 0:11:36.220
assim

0:11:36.220 --> 0:11:38.220
É isso para este vídeo. Eu

0:11:39,640 --> 0:11:45,180
Espero que tenha gostado e mais uma vez. Obrigado por assistir meu vídeo do [Youtube] [e] obrigado por assistir a este vídeo bônus
